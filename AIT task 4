# -*- coding: utf-8 -*-
"""ait task 4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-WYylFOIaCaKcP8IvMLbv_Y5xoxEfSaJ
"""

# Initial values of Alpha and Beta
MAX_SCORE = 1000  # Using descriptive names for clarity
MIN_SCORE = -1000

# Returns optimal value for current player
# (Initially called for root and maximizer)
def minimax(depth, nodeIndex, maximizingPlayer, values, alpha, beta):
    # Terminating condition: leaf node is reached
    # The depth must match the total height of the tree (e.g., 3 levels deep for 8 leaf nodes)
    # The number 3 here correctly corresponds to the depth of the leaf nodes (0, 1, 2, 3)
    if depth == 3:
        return values[nodeIndex]

    if maximizingPlayer:
        best = MIN_SCORE

        # Recur for left (nodeIndex * 2 + 0) and right (nodeIndex * 2 + 1) children
        for i in range(0, 2):
            val = minimax(depth + 1, nodeIndex * 2 + i, False, values, alpha, beta)
            best = max(best, val)
            alpha = max(alpha, best)

            # Alpha Beta Pruning: if beta is less than or equal to alpha, prune the remaining branches
            if beta <= alpha:
                break

        return best

    else: # Minimizing player
        best = MAX_SCORE

        # Recur for left and right children
        for i in range(0, 2):
            val = minimax(depth + 1, nodeIndex * 2 + i, True, values, alpha, beta)
            best = min(best, val)
            beta = min(beta, best)

            # Alpha Beta Pruning: if beta is less than or equal to alpha, prune the remaining branches
            if beta <= alpha:
                break

        return best

# Driver Code
if __name__ == "__main__":
    # Corrected syntax for the main execution block

    # MAX and MIN are used as variables for alpha and beta initialization
    MAX, MIN = MAX_SCORE, MIN_SCORE

    # Leaf node values (8 nodes deep, 4 levels including root)
    values = [3, 5, 6, 9, 1, 2, 0, -1]

    print("The optimal value is:", minimax(0, 0, True, values, MIN, MAX))
